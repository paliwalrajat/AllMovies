{"version":3,"sources":["components/header/Header.js","pages/movieDetail/movie.js","redux/action.js","components/cards/cards.js","pages/movieList/AllMovies.js","pages/movieList/myFavourite.js","App.js","redux/reducer.js","redux/saga.js","redux/store.js","index.js"],"names":["Header","className","to","style","textDecoration","Movie","dispatch","useDispatch","favouriteMovies","useSelector","state","currentMovieDetail","useState","showHslPlayer","setShowHslPlayer","id","useParams","showFavourite","setShowFavourite","useEffect","type","payload","map","favMovie","src","backdrop_path","poster_path","original_title","tagline","vote_average","class","vote_count","runtime","release_date","onClick","color","overview","autoPlay","controls","width","Cards","movie","isLoading","setIsLoading","setTimeout","highlightColor","height","duration","slice","AllMovies","popularMovies","MyFavourite","App","exact","path","initialState","reducer","action","filter","setFavouriteAsync","watchSetFavouriteMovie","removeFavouriteAsync","watchRemoveFavouriteMovie","setCurrentMovieDetailAsync","watchSetCurrentMovieDetailAsync","getPopularMoviesAsync","watchGetPopularMovies","rootSaga","put","takeLatest","fetch","then","res","json","results","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43fac608.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Header.css\"\nimport { Link } from \"react-router-dom\"\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"headerLeft\">\n                <Link to=\"/\" style={{textDecoration: \"none\"}}><span>MOVIES</span></Link>\n                <Link to=\"/my-favourite\" style={{textDecoration: \"none\"}}><span>MY FAVOURITE </span></Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React, { useEffect, useState } from 'react'\nimport \"./movie.css\"\nimport { useParams } from \"react-router-dom\"\nimport ReactHlsPlayer from \"react-hls-player\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setFavourite, removeFavourite, setCurrentMovieDetail } from \"../../redux/action\"\n\nconst Movie = () => {\n    const dispatch = useDispatch()\n    const favouriteMovies = useSelector(state => state.favouriteMovies)\n    const currentMovieDetail = useSelector(state => state.currentMovieDetail)\n    const [showHslPlayer, setShowHslPlayer] = useState(false)\n    const { id } = useParams()\n    const [showFavourite, setShowFavourite] = useState(false)\n\n    useEffect(() => {\n        dispatch(setCurrentMovieDetail(id))\n    }, [])\n\n    useEffect(() => {\n        favouriteMovies.map(favMovie => {\n            if (favMovie.id === currentMovieDetail.id) {\n                setShowFavourite(true)\n                // return <span className=\"favourite\" onClick={() => dispatch(removeFavourite(currentMovieDetail))}>Favourite<i class=\"newTab favouriteOne fas fa-heart\"></i></span>\n            }\n        })\n    }, [favouriteMovies])\n\n    return (\n        <div className=\"movie\">\n            <div className=\"movie__intro\">\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\n            </div>\n            <div className=\"movie__detail\">\n                <div className=\"movie__detailLeft\">\n                    <div className=\"movie__posterBox\">\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\n                    </div>\n                </div>\n                <div className=\"movie__detailRight\">\n                    <div className=\"movie__detailRightTop\">\n                        <div className=\"movie__name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\n                        <div className=\"movie__tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\n                        <div className=\"movie__rating\">\n                            {currentMovieDetail ? currentMovieDetail.vote_average : \"\"} <i class=\"fas fa-star\" />\n                            <span className=\"movie__voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\n                        </div>\n                        <div className=\"movie__runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\n                        <div className=\"movie__releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\n                    </div>\n                    <div className=\"movie__detailRightBottom\">\n                        <div className=\"synopsisText\">Synopsis\n                            {\n                                showFavourite\n                                    ?\n                                    <span className=\"favourite\" onClick={() => { dispatch(removeFavourite(currentMovieDetail)); setShowFavourite(false) }}>Favourite<i class=\"newTab favouriteOne fas fa-heart\"></i></span>\n                                    :\n                                    <span className=\"favourite\" onClick={() => { dispatch(setFavourite(currentMovieDetail)); setShowFavourite(true) }}>Add to favourite<i class=\"newTab nonFavourite far fa-heart\"></i></span>\n                            }\n                            {\n                                currentMovieDetail && <span className=\"favourite\" onClick={() => setShowHslPlayer(!showHslPlayer)}>Preview video{showHslPlayer ? <i class=\"newTab far fa-eye\" /> : <i class=\"newTab far fa-eye-slash\"></i>}</span>\n                            }\n                        </div>\n                        <div style={{color:\"#000\"}}>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\n                    </div>\n\n                </div>\n            </div>\n            {\n                showHslPlayer\n                &&\n                <>\n                    <div className=\"movie__heading\">Movie preview video </div>\n                    <div className=\"movie__hlsPlayer\">\n                        <ReactHlsPlayer\n                            src=\"https://content.jwplatform.com/manifests/yp34SRmf.m3u8\"\n                            autoPlay={true}\n                            controls={true}\n                            width=\"75%\"\n                        />\n                    </div>\n                </>\n            }\n        </div>\n    );\n};\n\nexport default Movie;","export const setFavourite = (payload) => ({\n    type: \"SET_FAVOURITE\",\n    payload: payload\n})\n\nexport const removeFavourite = (payload) => ({\n    type: \"REMOVE_FAVOURITE\",\n    payload: payload\n})\n\nexport const setCurrentMovieDetail = (payload) => ({\n    type: \"SET_CURRENT_MOVIE_DETAIL\",\n    payload: payload\n})\n\nexport const getPopularMovies = () => ({\n    type: \"GET_POPULAR_MOVIES\"\n})","import React, { useEffect, useState } from 'react'\nimport Skeleton, { SkeletonTheme }  from \"react-loading-skeleton\";\nimport \"./cards.css\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from 'react-router-dom';\n\nconst Cards = ({movie}) => {\n\n    const [ isLoading, setIsLoading] = useState(true)\n    const favouriteMovies = useSelector(state => state.favouriteMovies)\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false)\n        },1500)\n    },[movie.poster_path])\n\n    return <>\n        {\n            isLoading\n            ?\n            <div className=\"cards\">\n                <SkeletonTheme color=\"#fff\" highlightColor=\"#afacac\">\n                    <Skeleton height={300} duration={2} />\n                </SkeletonTheme>\n            </div>\n            :\n            <Link to={`/AllMovies/movie/${movie.id}`} style={{textDecoration: \"none\", color: \"white\"}}><div className=\"cards\">\n                {\n                    favouriteMovies.map(favMovie => {\n                        if(favMovie.id === movie.id){\n                            return<span class=\"favourite__indicator\"><i className=\"newTab favouriteOne fas fa-heart\" /></span>\n                        }\n                    })\n                }  \n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`} />     \n                <div className=\"cards__overlay\">\n                    <div class=\"card__title\">{movie ? movie.original_title : \"\"}</div>\n                    <div class=\"card__runtime\">{movie ? movie.release_date : \"\"}<span className=\"card__rating\">{movie ? movie.vote_average : \"\"} <i class=\"fas fa-star\" />{\"  \"}</span></div>\n                    <div class=\"card__description\">{movie ? movie.overview.slice(0,118) + \"...\": \"\"}</div>\n                </div >\n            </div></Link>\n        }\n    </>\n};\n\nexport default Cards;","import React, { useEffect } from 'react'\nimport \"./movieListPage.css\"\nimport Card from \"../../components/cards/cards\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getPopularMovies } from \"../../redux/action\"\n\nconst AllMovies = () => {\n\n    const dispatch = useDispatch()\n    const popularMovies = useSelector(state => state.popularMovies)\n\n    useEffect(() => {\n        dispatch(getPopularMovies())\n    },[])\n    \n\n    return (\n        <div className=\"movie_group\">\n            <div className=\"movies_card\">\n                {\n                    popularMovies.map(movie => <Card movie={movie} />)\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default AllMovies;","import React from 'react'\nimport \"./movieListPage.css\"\nimport Card from \"../../components/cards/cards\"\nimport { useSelector } from \"react-redux\"\n\nconst MyFavourite = () => {\n\n    const favouriteMovies = useSelector(state => state.favouriteMovies)\n    \n    return (\n        <div className=\"movie_group\">\n            <div className=\"movies_card\">\n                {\n                    favouriteMovies.map(movie => <Card movie={movie} />)\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default MyFavourite;","import React from 'react';\nimport './App.css'\n// import Cards from \"./components/cards/cards\"\nimport Header from \"./components/header/Header\"\nimport MovieDetail from \"./pages/movieDetail/movie\"\nimport AllMovies from \"./pages/movieList/AllMovies\"\nimport MyFavourite from \"./pages/movieList/myFavourite\"\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Header />\n                 <Switch>\n                <Route exact path=\"/\"><AllMovies /></Route>\n                <Route path=\"/AllMovies/movie/:id\"><MovieDetail /></Route>\n                <Route path=\"/my-favourite\"><MyFavourite /></Route>\n                <Route path=\"/:anything\"><Redirect to=\"/\"></Redirect></Route>\n                </Switch> \n            </Router>\n        </div>\n    )\n}\n\nexport default App;\n","const initialState = {\n    favouriteMovies: [],\n    popularMovies: [],\n    currentMovieDetail: {}\n}\n\nconst reducer =  (state=initialState, action) => {\n    switch(action.type){\n        case \"SET_FAVOURITE_ASYNC\":\n            return {\n                ...state,\n                favouriteMovies: [ ...state.favouriteMovies, action.payload.payload ]\n            }\n        case \"REMOVE_FAVOURITE_ASYNC\":\n            return {\n                ...state,\n                favouriteMovies: state.favouriteMovies.filter(movie => movie.id != action.payload.payload.id)\n            }\n        case \"GET_POPULAR_MOVIES_ASYNC\":\n            return {\n                ...state,\n                popularMovies: [...action.payload]\n            }\n        case \"SET_CURRENT_MOVIE_DETAIL_ASYNC\":\n            return {\n                ...state,\n                currentMovieDetail: { ...action.payload }\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { takeLatest, put, all } from \"redux-saga/effects\"\n\n\n\n// SET FAVOURITE\nfunction* setFavouriteAsync(payload) {\n    yield put({ type: \"SET_FAVOURITE_ASYNC\", payload: payload})\n}\nfunction* watchSetFavouriteMovie() {\n    yield takeLatest(\"SET_FAVOURITE\", setFavouriteAsync)\n}\n\n// REMOVE FAVOURITE\nfunction* removeFavouriteAsync(payload) {\n    yield put({ type: \"REMOVE_FAVOURITE_ASYNC\", payload: payload})\n}\nfunction* watchRemoveFavouriteMovie() {\n    yield takeLatest(\"REMOVE_FAVOURITE\", removeFavouriteAsync)\n}\n\n// SET CURRENT MOVIE DETAIL\nfunction* setCurrentMovieDetailAsync(payload) {\n    const json = yield fetch(`https://api.themoviedb.org/3/movie/${payload.payload}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`).then(res => res.json())\n    yield put({ type: \"SET_CURRENT_MOVIE_DETAIL_ASYNC\", payload: json})\n}\nfunction* watchSetCurrentMovieDetailAsync() {\n    yield takeLatest(\"SET_CURRENT_MOVIE_DETAIL\", setCurrentMovieDetailAsync)\n}\n\n// GET POPULAR MOVIES\nfunction* getPopularMoviesAsync() {\n    const json = yield fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\").then(res => res.json())\n    yield put({ type: \"GET_POPULAR_MOVIES_ASYNC\", payload: json.results})\n}\nfunction* watchGetPopularMovies() {\n    yield takeLatest(\"GET_POPULAR_MOVIES\", getPopularMoviesAsync)\n}\n\n// FINAL EXPORT ALL\nexport default function* rootSaga() {\n    yield all([\n        watchSetFavouriteMovie(), \n        watchRemoveFavouriteMovie(),\n        watchGetPopularMovies(), \n        watchSetCurrentMovieDetailAsync()\n    ])\n}","import { createStore, applyMiddleware } from \"redux\"\nimport reducer from \"./reducer\"\nimport createSagaMiddleware from \"redux-saga\"\nimport rootSaga from \"./saga\"\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware) )\n\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport store from \"./redux/store\"\nimport { Provider } from \"react-redux\"\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, \n    document.getElementById('root')\n)\n"],"sourceRoot":""}